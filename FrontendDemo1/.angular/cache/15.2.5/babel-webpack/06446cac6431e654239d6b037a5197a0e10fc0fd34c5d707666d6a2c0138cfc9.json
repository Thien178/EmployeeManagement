{"ast":null,"code":"import { Employee } from '../employee';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../employee.service\";\nexport class ProfileComponent {\n  constructor(employeeService) {\n    this.employeeService = employeeService;\n    this.employee = new Employee();\n    this.employeeForm = new FormGroup({\n      id: new FormControl(''),\n      name: new FormControl(''),\n      dob: new FormControl(''),\n      email: new FormControl(''),\n      department: new FormControl(''),\n      designation: new FormControl(''),\n      reportingManager: new FormControl('')\n    }, {\n      validators: Validators.required\n    });\n  }\n  ngOnInit() {\n    this.getData();\n  }\n  getData() {\n    const id = localStorage.getItem('user_id');\n    if (id === null) return;\n    this.employeeService.getByUserId(parseInt(id)).subscribe(data => {\n      if (data != null) {\n        this.employeeForm.value.name = this.employee.name;\n        this.employeeForm.value.dob = this.employee.dob;\n        this.employeeForm.value.email = this.employee.email;\n        this.employeeForm.value.department = this.employee.department;\n        this.employeeForm.value.designation = this.employee.designation;\n        this.employeeForm.value.reportingManager = this.employee.reportingManager;\n        console.log(this.employee);\n      }\n    });\n  }\n}\nProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService));\n};\nProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfileComponent,\n  selectors: [[\"app-profile\"]],\n  decls: 2,\n  vars: 0,\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"profile works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAQnE,OAAM,MAAOC,gBAAgB;EAa3BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAZnC,aAAQ,GAAY,IAAIN,QAAQ,EAAE;IAElC,iBAAY,GAAG,IAAIE,SAAS,CAAC;MAC3BK,EAAE,EAAG,IAAIN,WAAW,CAAC,EAAE,CAAC;MACxBO,IAAI,EAAG,IAAIP,WAAW,CAAC,EAAE,CAAC;MAC1BQ,GAAG,EAAG,IAAIR,WAAW,CAAC,EAAE,CAAC;MACzBS,KAAK,EAAG,IAAIT,WAAW,CAAC,EAAE,CAAC;MAC3BU,UAAU,EAAG,IAAIV,WAAW,CAAC,EAAE,CAAC;MAChCW,WAAW,EAAG,IAAIX,WAAW,CAAC,EAAE,CAAC;MACjCY,gBAAgB,EAAG,IAAIZ,WAAW,CAAC,EAAE;KACtC,EAAC;MAACa,UAAU,EAAEX,UAAU,CAACY;IAAQ,CAAC,CAAC;EAIpC;EAEAC,QAAQ;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAA,OAAO;IACL,MAAMV,EAAE,GAAGW,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE;IAC3C,IAAGZ,EAAE,KAAK,IAAI,EAAE;IAChB,IAAI,CAACD,eAAe,CAACc,WAAW,CAACC,QAAQ,CAACd,EAAE,CAAC,CAAC,CAACe,SAAS,CACtDC,IAAI,IAAE;MACJ,IAAGA,IAAI,IAAE,IAAI,EAAC;QACZ,IAAI,CAACC,YAAY,CAACC,KAAK,CAACjB,IAAI,GAAC,IAAI,CAACkB,QAAQ,CAAClB,IAAI;QAC/C,IAAI,CAACgB,YAAY,CAACC,KAAK,CAAChB,GAAG,GAAC,IAAI,CAACiB,QAAQ,CAACjB,GAAG;QAC7C,IAAI,CAACe,YAAY,CAACC,KAAK,CAACf,KAAK,GAAC,IAAI,CAACgB,QAAQ,CAAChB,KAAK;QACjD,IAAI,CAACc,YAAY,CAACC,KAAK,CAACd,UAAU,GAAC,IAAI,CAACe,QAAQ,CAACf,UAAU;QAC3D,IAAI,CAACa,YAAY,CAACC,KAAK,CAACb,WAAW,GAAC,IAAI,CAACc,QAAQ,CAACd,WAAW;QAC7D,IAAI,CAACY,YAAY,CAACC,KAAK,CAACZ,gBAAgB,GAAC,IAAI,CAACa,QAAQ,CAACb,gBAAgB;QACvEc,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;;IAE9B,CAAC,CACF;EACH;;AArCWtB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAyB;EAAAC;EAAAC;EAAAC;IAAA;MCV7BC,yBAAG;MAAAA,8BAAc;MAAAA,iBAAI","names":["Employee","FormControl","FormGroup","Validators","ProfileComponent","constructor","employeeService","id","name","dob","email","department","designation","reportingManager","validators","required","ngOnInit","getData","localStorage","getItem","getByUserId","parseInt","subscribe","data","employeeForm","value","employee","console","log","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/Users/thien/workspace/FrontendDemo1/src/app/profile/profile.component.ts","/Users/thien/workspace/FrontendDemo1/src/app/profile/profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit{\n  employee:Employee = new Employee();\n\n  employeeForm = new FormGroup({\n    id : new FormControl(''),\n    name : new FormControl(''),\n    dob : new FormControl(''),\n    email : new FormControl(''),\n    department : new FormControl(''),\n    designation : new FormControl(''),\n    reportingManager : new FormControl('')\n  },{validators: Validators.required})\n\n  constructor(private employeeService: EmployeeService){\n\n  }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData(){\n    const id = localStorage.getItem('user_id')!;\n    if(id === null) return;\n    this.employeeService.getByUserId(parseInt(id)).subscribe(\n      data=>{\n        if(data!=null){\n          this.employeeForm.value.name=this.employee.name;\n          this.employeeForm.value.dob=this.employee.dob;\n          this.employeeForm.value.email=this.employee.email;          \n          this.employeeForm.value.department=this.employee.department;          \n          this.employeeForm.value.designation=this.employee.designation;          \n          this.employeeForm.value.reportingManager=this.employee.reportingManager;          \n          console.log(this.employee);\n        }\n      }\n    )\n  }\n}\n\n","<p>profile works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}