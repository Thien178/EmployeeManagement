{"ast":null,"code":"import { Employee } from '../employee';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../employee.service\";\nimport * as i3 from \"@angular/router\";\nexport class EmployeeComponent {\n  constructor(http, employeeService) {\n    this.http = http;\n    this.employeeService = employeeService;\n    this.EmployeeArray = [];\n    this.name = \"\";\n    this.dob = \"\";\n    this.email = \"\";\n    this.department = \"\";\n    this.designation = \"\";\n    this.reportingManager = \"\";\n    this.employee = new Employee();\n    this.employeeForm = new FormGroup({\n      id: new FormControl(''),\n      name: new FormControl(''),\n      dob: new FormControl(''),\n      email: new FormControl(''),\n      department: new FormControl(''),\n      designation: new FormControl(''),\n      reportingManager: new FormControl('')\n    }, {\n      validators: Validators.required\n    });\n    this.getAllEmployee();\n  }\n  getAllEmployee() {\n    this.http.get(\"http://localhost:8090/api/v1/employee/\").subscribe(resultData => {\n      console.log(resultData);\n      this.EmployeeArray = resultData;\n    });\n  }\n  ngOnInit() {\n    this.getData();\n  }\n  getData() {\n    const id = localStorage.getItem('user_id');\n    if (id === null) return;\n    this.employeeService.getByUserId(parseInt(id)).subscribe(data => {\n      if (data != null) {\n        this.employeeForm.value.name = this.employee.name;\n        this.employeeForm.value.dob = this.employee.dob;\n        this.employeeForm.value.email = this.employee.email;\n        this.employeeForm.value.department = this.employee.department;\n        this.employeeForm.value.designation = this.employee.designation;\n        this.employeeForm.value.reportingManager = this.employee.reportingManager;\n        console.log(this.employee);\n      }\n    });\n  }\n}\nEmployeeComponent.ɵfac = function EmployeeComponent_Factory(t) {\n  return new (t || EmployeeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.EmployeeService));\n};\nEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeComponent,\n  selectors: [[\"app-employee\"]],\n  decls: 1,\n  vars: 0,\n  template: function EmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"router-outlet\");\n    }\n  },\n  dependencies: [i3.RouterOutlet],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AASnE,OAAM,MAAOC,iBAAiB;EAU5BC,YAAoBC,IAAgB,EAASC,eAAgC;IAAzD,SAAI,GAAJD,IAAI;IAAqB,oBAAe,GAAfC,eAAe;IAT5D,kBAAa,GAAW,EAAE;IAE1B,SAAI,GAAW,EAAE;IACjB,QAAG,GAAW,EAAE;IAChB,UAAK,GAAW,EAAE;IAClB,eAAU,GAAW,EAAE;IACvB,gBAAW,GAAW,EAAE;IACxB,qBAAgB,GAAG,EAAE;IAcrB,aAAQ,GAAY,IAAIP,QAAQ,EAAE;IAElC,iBAAY,GAAG,IAAIE,SAAS,CAAC;MAC3BM,EAAE,EAAG,IAAIP,WAAW,CAAC,EAAE,CAAC;MACxBQ,IAAI,EAAG,IAAIR,WAAW,CAAC,EAAE,CAAC;MAC1BS,GAAG,EAAG,IAAIT,WAAW,CAAC,EAAE,CAAC;MACzBU,KAAK,EAAG,IAAIV,WAAW,CAAC,EAAE,CAAC;MAC3BW,UAAU,EAAG,IAAIX,WAAW,CAAC,EAAE,CAAC;MAChCY,WAAW,EAAG,IAAIZ,WAAW,CAAC,EAAE,CAAC;MACjCa,gBAAgB,EAAG,IAAIb,WAAW,CAAC,EAAE;KACtC,EAAC;MAACc,UAAU,EAAEZ,UAAU,CAACa;IAAQ,CAAC,CAAC;IArBlC,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IAEZ,IAAI,CAACX,IAAI,CAACY,GAAG,CAAC,wCAAwC,CAAC,CAACC,SAAS,CAAEC,UAAe,IAAG;MACnFC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;MACvB,IAAI,CAACG,aAAa,GAAGH,UAAU;IACjC,CAAC,CAAC;EACJ;EAeAI,QAAQ;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAA,OAAO;IACL,MAAMjB,EAAE,GAAGkB,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE;IAC3C,IAAGnB,EAAE,KAAK,IAAI,EAAE;IAChB,IAAI,CAACD,eAAe,CAACqB,WAAW,CAACC,QAAQ,CAACrB,EAAE,CAAC,CAAC,CAACW,SAAS,CACtDW,IAAI,IAAE;MACJ,IAAGA,IAAI,IAAE,IAAI,EAAC;QACZ,IAAI,CAACC,YAAY,CAACC,KAAK,CAACvB,IAAI,GAAC,IAAI,CAACwB,QAAQ,CAACxB,IAAI;QAC/C,IAAI,CAACsB,YAAY,CAACC,KAAK,CAACtB,GAAG,GAAC,IAAI,CAACuB,QAAQ,CAACvB,GAAG;QAC7C,IAAI,CAACqB,YAAY,CAACC,KAAK,CAACrB,KAAK,GAAC,IAAI,CAACsB,QAAQ,CAACtB,KAAK;QACjD,IAAI,CAACoB,YAAY,CAACC,KAAK,CAACpB,UAAU,GAAC,IAAI,CAACqB,QAAQ,CAACrB,UAAU;QAC3D,IAAI,CAACmB,YAAY,CAACC,KAAK,CAACnB,WAAW,GAAC,IAAI,CAACoB,QAAQ,CAACpB,WAAW;QAC7D,IAAI,CAACkB,YAAY,CAACC,KAAK,CAAClB,gBAAgB,GAAC,IAAI,CAACmB,QAAQ,CAACnB,gBAAgB;QACvEO,OAAO,CAACC,GAAG,CAAC,IAAI,CAACW,QAAQ,CAAC;;IAE9B,CAAC,CACF;EACH;;AAvDW7B,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAA8B;EAAAC;EAAAC;EAAAC;IAAA;MCoB5BC,gCAA+B","names":["Employee","FormControl","FormGroup","Validators","EmployeeComponent","constructor","http","employeeService","id","name","dob","email","department","designation","reportingManager","validators","required","getAllEmployee","get","subscribe","resultData","console","log","EmployeeArray","ngOnInit","getData","localStorage","getItem","getByUserId","parseInt","data","employeeForm","value","employee","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/Users/thien/workspace/FrontendDemo1/src/app/employee/employee.component.ts","/Users/thien/workspace/FrontendDemo1/src/app/employee/employee.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EmployeeService } from '../employee.service';\n\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit{\n  EmployeeArray : any[] = [];\n\n  name: string = \"\";\n  dob: string = \"\";\n  email: string = \"\";\n  department: string = \"\";\n  designation: string = \"\";\n  reportingManager = \"\";\n\n  constructor(private http: HttpClient,private employeeService: EmployeeService) {\n    this.getAllEmployee();\n  }\n\n  getAllEmployee(){\n\n    this.http.get(\"http://localhost:8090/api/v1/employee/\").subscribe((resultData: any)=>{\n      console.log(resultData);\n      this.EmployeeArray = resultData;\n    });\n  }\n\n  employee:Employee = new Employee();\n\n  employeeForm = new FormGroup({\n    id : new FormControl(''),\n    name : new FormControl(''),\n    dob : new FormControl(''),\n    email : new FormControl(''),\n    department : new FormControl(''),\n    designation : new FormControl(''),\n    reportingManager : new FormControl('')\n  },{validators: Validators.required})\n\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData(){\n    const id = localStorage.getItem('user_id')!;\n    if(id === null) return;\n    this.employeeService.getByUserId(parseInt(id)).subscribe(\n      data=>{\n        if(data!=null){\n          this.employeeForm.value.name=this.employee.name;\n          this.employeeForm.value.dob=this.employee.dob;\n          this.employeeForm.value.email=this.employee.email;          \n          this.employeeForm.value.department=this.employee.department;          \n          this.employeeForm.value.designation=this.employee.designation;          \n          this.employeeForm.value.reportingManager=this.employee.reportingManager;          \n          console.log(this.employee);\n        }\n      }\n    )\n  }\n}\n","<!-- <div class=\"col-md-10\">\n    <h4 class=\"mb-3\">List Employee</h4>\n    <hr class=\"mb-4\">\n    <div class=\"card card-body bg-light\">\n      <table class=\"table table-striped table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Date of birth</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Department</th>\n            <th scope=\"col\">Designation</th>\n            <th scope=\"col\">Reporting Manager</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let EmployeeItem of EmployeeArray\">\n            <th scope=\"row\">{{EmployeeItem.id}}</th>\n            <td>{{EmployeeItem.name}}</td>\n            <td>{{EmployeeItem.dob}}</td>\n            <td>{{EmployeeItem.email}}</td>\n            <td>{{EmployeeItem.department}}</td>\n            <td>{{EmployeeItem.designation}}</td>\n            <td>{{EmployeeItem.reportingManager}}</td>\n            <td>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div> -->\n  <router-outlet></router-outlet>\n\n\n\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}