{"ast":null,"code":"import { Employee } from '../employee';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../employee.service\";\nimport * as i3 from \"@angular/forms\";\nexport class EmployeeComponent {\n  constructor(http, employeeService) {\n    this.http = http;\n    this.employeeService = employeeService;\n    this.EmployeeArray = [];\n    this.name = \"\";\n    this.dob = \"\";\n    this.email = \"\";\n    this.department = \"\";\n    this.designation = \"\";\n    this.reportingManager = \"\";\n    this.employee = new Employee();\n    this.employeeForm = new FormGroup({\n      id: new FormControl(''),\n      name: new FormControl(''),\n      dob: new FormControl(''),\n      email: new FormControl(''),\n      department: new FormControl(''),\n      designation: new FormControl(''),\n      reportingManager: new FormControl('')\n    }, {\n      validators: Validators.required\n    });\n    this.getAllEmployee();\n  }\n  getAllEmployee() {\n    this.http.get(\"http://localhost:8090/api/v1/employee/\").subscribe(resultData => {\n      console.log(resultData);\n      this.EmployeeArray = resultData;\n    });\n  }\n  ngOnInit() {\n    this.getData();\n  }\n  getData() {\n    const id = localStorage.getItem('user_id');\n    if (id === null) return;\n    this.employeeService.getByUserId(parseInt(id)).subscribe(data => {\n      if (data != null) {\n        this.employeeForm.value.name = this.employee.name;\n        this.employeeForm.value.dob = this.employee.dob;\n        this.employeeForm.value.email = this.employee.email;\n        this.employeeForm.value.department = this.employee.department;\n        this.employeeForm.value.designation = this.employee.designation;\n        this.employeeForm.value.reportingManager = this.employee.reportingManager;\n        console.log(this.employee);\n      }\n    });\n  }\n}\nEmployeeComponent.ɵfac = function EmployeeComponent_Factory(t) {\n  return new (t || EmployeeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.EmployeeService));\n};\nEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeComponent,\n  selectors: [[\"app-employee\"]],\n  decls: 45,\n  vars: 6,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"IE=edge\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-alpha1/dist/css/bootstrap.min.css\"], [1, \"container\", \"rounded\", \"bg-white\", \"mt-5\", \"mb-5\"], [1, \"row\"], [1, \"col-md-4\", \"border-right\"], [1, \"p-3\", \"py-5\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-3\"], [1, \"text-right\"], [1, \"row\", \"mt-2\"], [1, \"col-md-6\"], [1, \"labels\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"value\"], [1, \"row\", \"mt-3\"], [1, \"col-md-12\"], [\"type\", \"text\", \"formControlName\", \"dob\", 1, \"form-control\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"department\", 1, \"form-control\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"designation\", 1, \"form-control\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"reportingManager\", 1, \"form-control\", 3, \"value\"], [1, \"mt-5\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"profile-button\"]],\n  template: function EmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"meta\", 3)(5, \"link\", 4);\n      i0.ɵɵelementStart(6, \"title\");\n      i0.ɵɵtext(7, \"Document\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"body\")(9, \"div\", 5)(10, \"div\", 6);\n      i0.ɵɵelement(11, \"div\", 7);\n      i0.ɵɵelementStart(12, \"div\", 8)(13, \"div\", 9)(14, \"h4\", 10);\n      i0.ɵɵtext(15, \"Profile \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 11)(17, \"div\", 12)(18, \"label\", 13);\n      i0.ɵɵtext(19, \"Full Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 15)(22, \"div\", 16)(23, \"label\", 13);\n      i0.ɵɵtext(24, \"Date of birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 16)(27, \"label\", 13);\n      i0.ɵɵtext(28, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 16)(31, \"label\", 13);\n      i0.ɵɵtext(32, \"Department\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 16)(35, \"label\", 13);\n      i0.ɵɵtext(36, \"Designation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"input\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\", 16)(39, \"label\", 13);\n      i0.ɵɵtext(40, \"reportingManager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"input\", 21);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(42, \"div\", 22)(43, \"button\", 23);\n      i0.ɵɵtext(44, \"Save Profile\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(20);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.employeeForm.value.name);\n      i0.ɵɵadvance(5);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.employeeForm.value.dob);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.employeeForm.value.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.employeeForm.value.department);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.employeeForm.value.designation);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.employeeForm.value.reportingManager);\n    }\n  },\n  dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Employee","FormControl","FormGroup","Validators","EmployeeComponent","constructor","http","employeeService","id","name","dob","email","department","designation","reportingManager","validators","required","getAllEmployee","get","subscribe","resultData","console","log","EmployeeArray","ngOnInit","getData","localStorage","getItem","getByUserId","parseInt","data","employeeForm","value","employee","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/thien/workspace/FrontendDemo1/src/app/employee/employee.component.ts","/Users/thien/workspace/FrontendDemo1/src/app/employee/employee.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EmployeeService } from '../employee.service';\n\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit{\n  EmployeeArray : any[] = [];\n\n  name: string = \"\";\n  dob: string = \"\";\n  email: string = \"\";\n  department: string = \"\";\n  designation: string = \"\";\n  reportingManager = \"\";\n\n  constructor(private http: HttpClient,private employeeService: EmployeeService) {\n    this.getAllEmployee();\n  }\n\n  getAllEmployee(){\n\n    this.http.get(\"http://localhost:8090/api/v1/employee/\").subscribe((resultData: any)=>{\n      console.log(resultData);\n      this.EmployeeArray = resultData;\n    });\n  }\n\n  employee:Employee = new Employee();\n\n  employeeForm = new FormGroup({\n    id : new FormControl(''),\n    name : new FormControl(''),\n    dob : new FormControl(''),\n    email : new FormControl(''),\n    department : new FormControl(''),\n    designation : new FormControl(''),\n    reportingManager : new FormControl('')\n  },{validators: Validators.required})\n\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData(){\n    const id = localStorage.getItem('user_id')!;\n    if(id === null) return;\n    this.employeeService.getByUserId(parseInt(id)).subscribe(\n      data=>{\n        if(data!=null){\n          this.employeeForm.value.name=this.employee.name;\n          this.employeeForm.value.dob=this.employee.dob;\n          this.employeeForm.value.email=this.employee.email;          \n          this.employeeForm.value.department=this.employee.department;          \n          this.employeeForm.value.designation=this.employee.designation;          \n          this.employeeForm.value.reportingManager=this.employee.reportingManager;          \n          console.log(this.employee);\n        }\n      }\n    )\n  }\n}\n","<!-- <div class=\"col-md-10\">\n    <h4 class=\"mb-3\">List Employee</h4>\n    <hr class=\"mb-4\">\n    <div class=\"card card-body bg-light\">\n      <table class=\"table table-striped table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Date of birth</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Department</th>\n            <th scope=\"col\">Designation</th>\n            <th scope=\"col\">Reporting Manager</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let EmployeeItem of EmployeeArray\">\n            <th scope=\"row\">{{EmployeeItem.id}}</th>\n            <td>{{EmployeeItem.name}}</td>\n            <td>{{EmployeeItem.dob}}</td>\n            <td>{{EmployeeItem.email}}</td>\n            <td>{{EmployeeItem.department}}</td>\n            <td>{{EmployeeItem.designation}}</td>\n            <td>{{EmployeeItem.reportingManager}}</td>\n            <td>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div> -->\n  <!-- <router-outlet></router-outlet> -->\n\n  <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n      <meta charset=\"UTF-8\">\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-alpha1/dist/css/bootstrap.min.css\"   >\n      <title>Document</title>\n  </head>\n  <body>\n      <div class=\"container rounded bg-white mt-5 mb-5\">\n          <div class=\"row\">\n              <div class=\"col-md-4 border-right\">\n                  <!-- <div class=\"d-flex flex-column align-items-center text-center p-3 py-5\">\n                      <span class=\"font-weight-bold\">{{employee.name}}</span><span class=\"text-black-50\">{{employee.email}}</span><span> </span></div> -->\n              </div>\n              <!-- <form  class=\"col-md-5 border-right\" [formGroup]=\"employeeForm\" (ngSubmit)=\"onSubmit()\"> -->\n             \n                  <div class=\"p-3 py-5\">\n                      <div class=\"d-flex justify-content-between align-items-center mb-3\">\n                          <h4 class=\"text-right\">Profile </h4>\n                      </div>\n                      <div class=\"row mt-2\">\n                          <div class=\"col-md-6\"><label class=\"labels\">Full Name</label><input type=\"text\" class=\"form-control\"  \n                              value=\"{{employeeForm.value.name}}\" formControlName=\"name\" ></div>\n                      </div>\n                      <div class=\"row mt-3\">\n                          <div class=\"col-md-12\">\n                              <label class=\"labels\">Date of birth</label><input type=\"text\" class=\"form-control\"  value=\"{{employeeForm.value.dob}}\" formControlName=\"dob\"></div>\n                          <div class=\"col-md-12\"><label class=\"labels\">Email</label><input type=\"text\" class=\"form-control\"  value=\"{{employeeForm.value.email}}\" formControlName=\"email\"></div>\n                          <div class=\"col-md-12\"><label class=\"labels\">Department</label><input type=\"text\" class=\"form-control\"  value=\"{{employeeForm.value.department}}\" formControlName=\"department\"></div>\n                          <div class=\"col-md-12\"><label class=\"labels\">Designation</label><input type=\"text\" class=\"form-control\"  value=\"{{employeeForm.value.designation}}\"formControlName=\"designation\"></div>                       \n                          <div class=\"col-md-12\"><label class=\"labels\">reportingManager</label><input type=\"text\" class=\"form-control\"  value=\"{{employeeForm.value.reportingManager}}\" formControlName=\"reportingManager\"></div>\n                      </div>                   \n                      <div class=\"mt-5 text-center\"><button class=\"btn btn-primary profile-button\" type=\"submit\">Save Profile</button></div>\n                  </div>\n             \n          <!-- </form> -->\n          </div>\n      </div>\n  </body>\n  </html>\n  \n\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}